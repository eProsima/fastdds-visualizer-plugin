@startuml

' ---------------------------------------------------------
actor plotjuggler
participant FastDdsDataStreamer
participant Handler
participant Participant
participant ReaderHandler

box "FastDDS"
participant DomainParticipantFactory
participant DynamicPubSubType
participant DomainParticipant
participant XMLProfileManager
participant DynamicDataFactory
participant Subscriber
end box

' ---------------------------------------------------------

plotjuggler -> FastDdsDataStreamer: start
activate FastDdsDataStreamer

FastDdsDataStreamer -> FastDdsDataStreamer: connect_to_domain_
activate FastDdsDataStreamer

    FastDdsDataStreamer -> Handler: connect_to_domain(domain_id)
    activate Handler

    Handler -> Participant**: create
    Participant -> DomainParticipant**: create
    Participant -> Subscriber**: create

    Handler --> FastDdsDataStreamer
    deactivate Handler

FastDdsDataStreamer --> FastDdsDataStreamer
deactivate FastDdsDataStreamer

FastDdsDataStreamer -> FastDdsDataStreamer: read user configuration

loop selected_topics
    FastDdsDataStreamer -> Handler: create_subscription
    activate Handler

        Handler -> Participant: create_subscription(topic_name, data_type_configuration)
        activate Participant

        Participant -> Participant: check if topic is registered
        Participant -> Participant: check if type is registered

        alt type is registered
            Participant -> DomainParticipantFactory: get_dynamic_type()
            activate DomainParticipantFactory

            DomainParticipantFactory --> Participant: dyn_type
            deactivate DomainParticipantFactory
        else type not registered
            Participant -> DomainParticipantFactory : newDynamicType
            activate DomainParticipantFactory

            DomainParticipantFactory --> Participant
            deactivate DomainParticipantFactory

            Participant -> DynamicPubSubType: register_type(participant_)
            activate DynamicPubSubType
            DynamicPubSubType --> Participant: dyn_type
            deactivate DynamicPubSubType
        end

        Participant -> DynamicPubSubType: dyn_type->m_isGetKeyDefined
        activate DynamicPubSubType

        DynamicPubSubType --> Participant: is_keyed
        deactivate DynamicPubSubType
        
        alt is_keyed is true
            Participant -> Participant: topic_qos = key_topic_qos_()
            Participant -> Participant: reader_qos = key_datareader_qos_()
        else
            Participant -> Participant: topic_qos = default_topic_qos_()
            Participant -> Participant: reader_qos = default_datareader_qos_()
        end

        Participant -> DomainParticipant: create_topic(topic_name, type_name, topic_qos)
        activate DomainParticipant

        DomainParticipant --> Participant: topic*
        deactivate DomainParticipant

        Participant -> Subscriber: create_datareader(topic, reader_qos, this)
        activate Subscriber

        Subscriber --> Participant: datareader*
        deactivate Subscriber

        Participant -> ReaderHandler**: create(topic, datareader, dyn_type, ..., is_keyed)
        activate ReaderHandler

            ReaderHandler -> DynamicDataFactory: create_data(type_)
            activate DynamicDataFactory

            DynamicDataFactory -> ReaderHandler: data_
            deactivate DynamicDataFactory

        deactivate ReaderHandler

        Participant -> Participant: insert created reader into readers_

        Participant --> Handler
        deactivate Participant

    Handler --> FastDdsDataStreamer
    deactivate Handler
end

FastDdsDataStreamer --> plotjuggler: true
deactivate FastDdsDataStreamer

@enduml